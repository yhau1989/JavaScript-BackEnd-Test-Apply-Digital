{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":12,"numPassedTests":60,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":12,"numTotalTests":60,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1742949266307,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["ProductsController"],"duration":73,"failureDetails":[],"failureMessages":[],"fullName":"ProductsController should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["ProductsController","findAllByPage"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"ProductsController findAllByPage should call service.findAllByPage with correct parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call service.findAllByPage with correct parameters"},{"ancestorTitles":["ProductsController","findAll"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductsController findAll should call service.findAll","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call service.findAll"},{"ancestorTitles":["ProductsController","findOne"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductsController findOne should call service.findOne with correct parameter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call service.findOne with correct parameter"},{"ancestorTitles":["ProductsController","create"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductsController create should call service.create with correct parameter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call service.create with correct parameter"},{"ancestorTitles":["ProductsController","update"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductsController update should call service.update with correct parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call service.update with correct parameters"},{"ancestorTitles":["ProductsController","delete"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ProductsController delete should call service.delete with correct parameter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call service.delete with correct parameter"}],"endTime":1742949269946,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/products/products.controller.spec.ts","startTime":1742949266494,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AuthModule"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"AuthModule should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["AuthModule"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthModule should have AuthService defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have AuthService defined"},{"ancestorTitles":["AuthModule"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuthModule should have AuthController defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have AuthController defined"},{"ancestorTitles":["AuthModule"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthModule should have JwtStrategy defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have JwtStrategy defined"}],"endTime":1742949270290,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/auth/auth.module.spec.ts","startTime":1742949269964,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AuthController"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AuthController should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["AuthController","login"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthController login should call AuthService.login with correct parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call AuthService.login with correct parameters"},{"ancestorTitles":["AuthController","login"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthController login should return a token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return a token"}],"endTime":1742949270442,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/auth/auth.controller.spec.ts","startTime":1742949270305,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["UpdateProductDto"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UpdateProductDto should validate with all optional fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate with all optional fields"},{"ancestorTitles":["UpdateProductDto"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"UpdateProductDto should validate with no fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate with no fields"},{"ancestorTitles":["UpdateProductDto"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"UpdateProductDto should fail validation with incorrect types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fail validation with incorrect types"}],"endTime":1742949270570,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/products/dto/update-product.dto.spec.ts","startTime":1742949270448,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CreateProductDto"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"CreateProductDto should validate all required fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate all required fields"},{"ancestorTitles":["CreateProductDto"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"CreateProductDto should fail validation when required fields are missing","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fail validation when required fields are missing"},{"ancestorTitles":["CreateProductDto"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"CreateProductDto should validate optional fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate optional fields"},{"ancestorTitles":["CreateProductDto"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"CreateProductDto should fail validation when fields have incorrect types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fail validation when fields have incorrect types"}],"endTime":1742949270612,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/products/dto/create-product.dto.spec.ts","startTime":1742949266494,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ProductFilterDto"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ProductFilterDto should validate with all optional fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate with all optional fields"},{"ancestorTitles":["ProductFilterDto"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ProductFilterDto should validate with no fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate with no fields"},{"ancestorTitles":["ProductFilterDto"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductFilterDto should fail validation with incorrect types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fail validation with incorrect types"},{"ancestorTitles":["ProductFilterDto"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductFilterDto should validate with some fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate with some fields"}],"endTime":1742949270674,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/products/dto/filter-product.dto.spec.ts","startTime":1742949266508,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["configuration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"configuration should return the correct mongo uri from environment variables","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return the correct mongo uri from environment variables"},{"ancestorTitles":["configuration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"configuration should return true for synchronize when DB_SYNCHRONIZE is \"true\"","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true for synchronize when DB_SYNCHRONIZE is \"true\""},{"ancestorTitles":["configuration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"configuration should return false for synchronize when DB_SYNCHRONIZE is not \"true\"","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false for synchronize when DB_SYNCHRONIZE is not \"true\""},{"ancestorTitles":["configuration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"configuration should return false for synchronize when DB_SYNCHRONIZE is undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false for synchronize when DB_SYNCHRONIZE is undefined"}],"endTime":1742949270674,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/config/configuration.spec.ts","startTime":1742949270617,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AuthService"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuthService should return access token for valid credentials","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return access token for valid credentials"},{"ancestorTitles":["AuthService"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"AuthService should throw an error for invalid credentials","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should throw an error for invalid credentials"}],"endTime":1742949270697,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/auth/auth.service.spec.ts","startTime":1742949270573,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ReportsController"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"ReportsController should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["ReportsController"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ReportsController should return deleted percentage","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return deleted percentage"},{"ancestorTitles":["ReportsController"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ReportsController should return non-deleted percentage","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return non-deleted percentage"},{"ancestorTitles":["ReportsController"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ReportsController should return custom report","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return custom report"}],"endTime":1742949270751,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/reports/reports.controller.spec.ts","startTime":1742949266494,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ReportsService"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"ReportsService should calculate the percentage of deleted products","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate the percentage of deleted products"},{"ancestorTitles":["ReportsService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ReportsService should calculate the percentage of non-deleted products","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate the percentage of non-deleted products"},{"ancestorTitles":["ReportsService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ReportsService should return 0 if there are no products","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 0 if there are no products"},{"ancestorTitles":["ReportsService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ReportsService should return a message in getCustomReport","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return a message in getCustomReport"},{"ancestorTitles":["ReportsService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ReportsService should return 0% deleted if no products are deleted","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 0% deleted if no products are deleted"},{"ancestorTitles":["ReportsService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ReportsService should filter products by price when withPrice is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should filter products by price when withPrice is true"},{"ancestorTitles":["ReportsService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ReportsService should filter products by price when withPrice is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should filter products by price when withPrice is false"},{"ancestorTitles":["ReportsService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ReportsService should filter products by date range","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should filter products by date range"}],"endTime":1742949270782,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/reports/reports.service.spec.ts","startTime":1742949266508,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ProductsService","findAll"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService findAll should return an array of products","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an array of products"},{"ancestorTitles":["ProductsService","findAll"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService findAll should return an empty array if no products are found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return an empty array if no products are found"},{"ancestorTitles":["ProductsService","findOne"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService findOne should return a product if found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return a product if found"},{"ancestorTitles":["ProductsService","findOne"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService findOne should throw a NotFoundException if product not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw a NotFoundException if product not found"},{"ancestorTitles":["ProductsService","create"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService create should create a new product","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create a new product"},{"ancestorTitles":["ProductsService","create"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService create should throw a HttpException if product with SKU already exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw a HttpException if product with SKU already exists"},{"ancestorTitles":["ProductsService","update"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService update should update and return the updated product","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update and return the updated product"},{"ancestorTitles":["ProductsService","update"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService update should handle no updates if DTO is empty","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle no updates if DTO is empty"},{"ancestorTitles":["ProductsService","update"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService update should throw NotFoundException if product not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw NotFoundException if product not found"},{"ancestorTitles":["ProductsService","delete"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService delete should mark the product as deleted","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should mark the product as deleted"},{"ancestorTitles":["ProductsService","delete"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService delete should throw NotFoundException if product not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw NotFoundException if product not found"},{"ancestorTitles":["ProductsService","findAllByPage"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService findAllByPage should return paginated products","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return paginated products"},{"ancestorTitles":["ProductsService","findAllByPage"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ProductsService findAllByPage should handle empty filter results","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty filter results"}],"endTime":1742949270869,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/products/products.service.spec.ts","startTime":1742949266499,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ContenfullService"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ContenfullService should be defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be defined"},{"ancestorTitles":["ContenfullService","getContenfullContent"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"ContenfullService getContenfullContent should fetch content and insert new items into DB","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should fetch content and insert new items into DB"},{"ancestorTitles":["ContenfullService","getContenfullContent"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ContenfullService getContenfullContent should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["ContenfullService","getContenfullContent"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ContenfullService getContenfullContent should return 1 if the response status is not 200","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 1 if the response status is not 200"}],"endTime":1742949270893,"message":"","name":"/Users/samuel/Documents/GitHub/samuel/JavaScript-BackEnd-Test-Apply-Digital/src/content/contenfull/contenfull.service.spec.ts","startTime":1742949266506,"status":"passed","summary":""}],"wasInterrupted":false}
